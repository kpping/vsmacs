{
  "name": "vsmacs",
  "displayName": "VSmacs",
  "description": "Emacs Key Bindings for Visual Studio Code. No Kill Ring. No Fancy Things.",
  "version": "0.6.2",
  "license": "MIT",
  "publisher": "kpping",
  "engines": {
    "vscode": "^1.44.0"
  },
  "categories": [
    "Keymaps"
  ],
  "keywords": [
    "keymaps",
    "emacs",
    "key bindings"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vsmacs.gotoChar",
        "title": "VSmacs: Go to Char..."
      },
      {
        "command": "vsmacs.gotoLine",
        "title": "VSmacs: Go to Line..."
      },
      {
        "command": "undo",
        "title": "Undo"
      },
      {
        "command": "redo",
        "title": "Redo"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+j",
        "command": "vsmacs.lineBreakInsert",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "backspace",
        "command": "vsmacs.deleteLeft",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+d",
        "command": "vsmacs.deleteRight",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "delete",
        "command": "vsmacs.deleteRight",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "alt+d",
        "command": "vsmacs.deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k",
        "command": "vsmacs.killing",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "alt+w",
        "command": "vsmacs.clipboardCopyAction",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+c",
        "command": "vsmacs.clipboardCopyAction",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+w",
        "command": "vsmacs.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+y",
        "command": "vsmacs.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+v",
        "command": "vsmacs.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+x u",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+shift+-",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+/",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "mac": "cmd+z",
        "key": "ctrl+z",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+.",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "mac": "shift+cmd+z",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+'",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+'",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+;",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
      },
      {
        "key": "ctrl+g",
        "command": ""
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.hideInterfaceOverview",
        "when": "interfaceOverviewVisible"
      },
      {
        "key": "ctrl+g",
        "command": "notifications.hideList",
        "when": "notificationCenterVisible"
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible"
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.navigationModeExit",
        "when": "accessibilityModeEnabled && terminalA11yTreeFocus"
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
      },
      {
        "key": "ctrl+g",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+g",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
      },
      {
        "key": "ctrl+g",
        "command": "vsmacs.stopMarkMode",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
      },
      {
        "key": "ctrl+g",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "closeDirtyDiff",
        "when": "dirtyDiffVisible"
      },
      {
        "key": "ctrl+g",
        "command": "vsmacs.closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
      },
      {
        "key": "ctrl+g",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
      },
      {
        "key": "ctrl+g",
        "command": "closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
      },
      {
        "key": "ctrl+g",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
      },
      {
        "key": "ctrl+g",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
      },
      {
        "key": "ctrl+g",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
      },
      {
        "key": "ctrl+g",
        "command": "editor.action.webvieweditor.hideFind",
        "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "key": "ctrl+g",
        "command": "editor.cancelOperation",
        "when": "cancellableOperation"
      },
      {
        "key": "ctrl+g",
        "command": "editor.closeCallHierarchy",
        "when": "callHierarchyVisible && !config.editor.stablePeek"
      },
      {
        "key": "ctrl+g",
        "command": "editor.gotoNextSymbolFromResult.cancel",
        "when": "hasSymbols"
      },
      {
        "key": "ctrl+g",
        "command": "filesExplorer.cancelCut",
        "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
      },
      {
        "key": "ctrl+g",
        "command": "leaveEditorMessage",
        "when": "messageVisible"
      },
      {
        "key": "ctrl+g",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
      },
      {
        "key": "ctrl+g",
        "command": "list.clear",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "notifications.hideToasts",
        "when": "notificationToastsVisible"
      },
      {
        "key": "ctrl+g",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsSearch"
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.hideComment",
        "when": "commentEditorFocused"
      },
      {
        "key": "escape",
        "command": "vsmacs.stopMarkMode",
        "when": "textInputFocus"
      },
      {
        "key": "escape",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
      },
      {
        "key": "ctrl+space",
        "command": "",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+space",
        "command": "",
        "when": "suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+space",
        "command": "vsmacs.toggleMarkMode",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+x h",
        "command": "vsmacs.selectAll",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+x ctrl+f",
        "command": "workbench.action.quickOpen"
      },
      {
        "key": "ctrl+x ctrl+c",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
      },
      {
        "key": "ctrl+x ctrl+c",
        "command": "workbench.action.closeActiveEditor"
      },
      {
        "key": "ctrl+x ctrl+c",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
      },
      {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save"
      },
      {
        "key": "ctrl+x ctrl+w",
        "command": "workbench.action.files.saveAs"
      },
      {
        "key": "ctrl+x s",
        "command": "workbench.action.files.saveAll"
      },
      {
        "key": "down",
        "command": "vsmacs.normalDown",
        "when": "textInputFocus && !suggestWidgetVisible && !parameterHintsVisible"
      },
      {
        "key": "ctrl+n",
        "command": "vsmacs.moveDown",
        "when": "textInputFocus && !suggestWidgetVisible && !parameterHintsVisible"
      },
      {
        "key": "ctrl+n",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+n",
        "command": "history.showNext",
        "when": "historyNavigationEnabled && historyNavigationWidget"
      },
      {
        "key": "ctrl+n",
        "command": "keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch"
      },
      {
        "key": "ctrl+n",
        "command": "",
        "when": "listFocus && inputFocus"
      },
      {
        "key": "ctrl+n",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "ctrl+n",
        "command": "notifications.focusNextToast",
        "when": "notificationFocus && notificationToastsVisible"
      },
      {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+n",
        "command": "settings.action.focusSettingsFile",
        "when": "inSettingsSearch && !suggestWidgetVisible"
      },
      {
        "key": "ctrl+n",
        "command": "settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible"
      },
      {
        "key": "ctrl+n",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "key": "ctrl+n",
        "command": "workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
      },
      {
        "key": "ctrl+n",
        "command": "workbench.action.notebook.cursorDown",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
      },
      {
        "key": "up",
        "command": "vsmacs.normalUp",
        "when": "textInputFocus && !suggestWidgetVisible && !parameterHintsVisible"
      },
      {
        "key": "ctrl+p",
        "command": "vsmacs.moveUp",
        "when": "textInputFocus && !suggestWidgetVisible && !parameterHintsVisible"
      },
      {
        "key": "ctrl+p",
        "command": "history.showPrevious",
        "when": "historyNavigationEnabled && historyNavigationWidget"
      },
      {
        "key": "ctrl+p",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "ctrl+p",
        "command": "notifications.focusPreviousToast",
        "when": "notificationFocus && notificationToastsVisible"
      },
      {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+p",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "key": "ctrl+p",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
      },
      {
        "key": "ctrl+p",
        "command": "workbench.action.notebook.cursorUp",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
      },
      {
        "key": "right",
        "command": "vsmacs.normalRight",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "vsmacs.moveRight",
        "when": "inputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+f",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "nextCompressedFolder",
        "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "notification.expand",
        "when": "notificationFocus"
      },
      {
        "key": "alt+f",
        "command": "vsmacs.moveWordEndRight",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "left",
        "command": "vsmacs.normalLeft",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+b",
        "command": "vsmacs.moveLeft",
        "when": "inputFocus"
      },
      {
        "key": "ctrl+b",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+b",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "ctrl+b",
        "command": "notification.collapse",
        "when": "notificationFocus"
      },
      {
        "key": "ctrl+b",
        "command": "previousCompressedFolder",
        "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
      },
      {
        "key": "alt+b",
        "command": "vsmacs.moveWordStartLeft",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+b",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "home",
        "command": "vsmacs.normalHome",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+a",
        "command": "vsmacs.moveLineStart",
        "when": "textInputFocus"
      },
      {
        "key": "end",
        "command": "vsmacs.normalEnd",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+e",
        "command": "vsmacs.moveLineEnd",
        "when": "inputFocus"
      },
      {
        "key": "alt+shift+.",
        "command": "vsmacs.moveBottom",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+shift+,",
        "command": "vsmacs.moveTop",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+g g",
        "command": "vsmacs.gotoLine"
      },
      {
        "key": "alt+g c",
        "command": "vsmacs.gotoChar"
      },
      {
        "key": "ctrl+s",
        "command": "actions.find"
      },
      {
        "key": "ctrl+s",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
      },
      {
        "key": "ctrl+r",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
      },
      {
        "key": "enter",
        "command": "vsmacs.closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
      },
      {
        "key": "ctrl+x k",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
      },
      {
        "key": "ctrl+x k",
        "command": "workbench.action.closeActiveEditor"
      },
      {
        "key": "ctrl+x k",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
      },
      {
        "key": "ctrl+x b",
        "command": "workbench.action.quickOpenLeastRecentlyUsedEditor"
      },
      {
        "key": "ctrl+x ctrl+b",
        "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
      },
      {
        "key": "ctrl+x 2",
        "command": "vsmacs.splitEditorDown"
      },
      {
        "key": "ctrl+x 3",
        "command": "vsmacs.splitEditorRight"
      },
      {
        "key": "ctrl+x o",
        "command": "workbench.action.navigateEditorGroups"
      },
      {
        "key": "ctrl+x 0",
        "command": "workbench.action.closeEditorsInGroup"
      },
      {
        "key": "ctrl+x 1",
        "command": "workbench.action.closeEditorsInOtherGroups"
      },
      {
        "key": "alt+x",
        "command": "workbench.action.showCommands"
      },
      {
        "mac": "cmd+1",
        "key": "ctrl+1",
        "command": "workbench.action.openEditorAtIndex1"
      },
      {
        "mac": "cmd+2",
        "key": "ctrl+2",
        "command": "workbench.action.openEditorAtIndex2"
      },
      {
        "mac": "cmd+3",
        "key": "ctrl+3",
        "command": "workbench.action.openEditorAtIndex3"
      },
      {
        "mac": "cmd+4",
        "key": "ctrl+4",
        "command": "workbench.action.openEditorAtIndex4"
      },
      {
        "mac": "cmd+5",
        "key": "ctrl+5",
        "command": "workbench.action.openEditorAtIndex5"
      },
      {
        "mac": "cmd+6",
        "key": "ctrl+6",
        "command": "workbench.action.openEditorAtIndex6"
      },
      {
        "mac": "cmd+7",
        "key": "ctrl+7",
        "command": "workbench.action.openEditorAtIndex7"
      },
      {
        "mac": "cmd+8",
        "key": "ctrl+8",
        "command": "workbench.action.openEditorAtIndex8"
      },
      {
        "mac": "cmd+9",
        "key": "ctrl+9",
        "command": "workbench.action.openEditorAtIndex9"
      }
    ]
  },
  "scripts": {
    "tsc:onlyts": "tsc -b tsconfig-onlyts.json",
    "tsc:spects": "tsc -b tsconfig-spects.json",
    "compile": "yarn tsc:onlyts && yarn tsc:spects",
    "watch": "tsc -b tsconfig-onlyts.json --watch",
    "lint": "eslint --ext .ts ./src --fix",
    "prettier:config": "prettier --no-config --write \"./**/*.{json,yml}\"",
    "prettier:ts": "prettier --write \"./**/*.ts\"",
    "prettier": "yarn prettier:config --loglevel warn && yarn prettier:ts --loglevel warn",
    "test": "jest --passWithNoTests",
    "build": "yarn prettier && yarn lint && yarn compile && yarn test"
  },
  "dependencies": {
    "@ag1/nil": "^1.1.0"
  },
  "devDependencies": {
    "@babel/core": "^7.9.0",
    "@babel/preset-env": "^7.9.5",
    "@babel/preset-typescript": "^7.9.0",
    "@types/jest": "^25.2.1",
    "@types/node": "^12",
    "@types/vscode": "^1.44.0",
    "@typescript-eslint/eslint-plugin": "^2.28.0",
    "@typescript-eslint/parser": "^2.28.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-plugin-json": "^2.1.1",
    "eslint-plugin-prettier": "^3.1.3",
    "jest": "^25.3.0",
    "prettier": "^2.0.4",
    "ts-jest": "^25.3.1",
    "typescript": "^3.8.3"
  },
  "homepage": "https://github.com/kpping/vsmacs/blob/master/README.md",
  "bugs": "https://github.com/kpping/vsmacs/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/kpping/vsmacs.git"
  }
}
